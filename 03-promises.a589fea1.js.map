{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEmBC,SAASC,cAAc,SAE/BC,iBAAiB,UAE5B,6BAWI,IAAMC,EAAcC,OAAOC,EAAMC,QAAUC,EAAI,GAAKH,OAAOI,EAAKF,OAChEG,YAAW,WAcf,IAAuBC,EAAUC,EACzBC,GADeF,EAbHH,EAaaI,EAbVR,EAcfS,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAEN,SAAAA,EAAUC,MAAAA,IAEpBM,EAAO,CAAEP,SAAAA,EAAUC,MAAAA,QAlBlBO,MAAK,SAAAC,IAuBZ,SAAmBT,EAAUC,GACpBb,EAAAsB,OAAOC,QAAS,uBAAuCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OAvB9DY,CADeJ,EAART,SAAeS,EAALR,UAGlBa,OAAM,SAAAL,IAwBb,SAAkBT,EAAUC,GACnBb,EAAAsB,OAAOK,QAAS,sBAAoCH,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OAxB3De,CADgBP,EAART,SAAeS,EAALR,YAGnBR,IAnBLwB,MAAMC,iBAEN,IAA6DC,EAAnBF,MAAMG,cAAzCC,SAAW1B,EAAKwB,EAALlB,MAAOH,EAAIqB,EAAJrB,KAAMwB,EAAMH,EAANG,OAE/B,GAAI3B,EAAMC,MAAQ,GAAKE,EAAKF,MAAQ,EAElC,YADAR,EAAAsB,OAAOa,KAAK,qEAId,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAO1B,MAAO4B,GAAK,EAACC,EAAAD,GAazCP,MAAMG,cAAcM","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst submitForm = document.querySelector('.form');\n\nsubmitForm.addEventListener('submit', onBtnClickHandler);\n\nfunction onBtnClickHandler() {\n  event.preventDefault();\n\n  const {elements: {delay, step, amount}} = event.currentTarget;\n\n  if (delay.value < 0 || step.value < 0) {\n    Notify.info('First delay and Delay step cannot be less zero! Please change it!');\n    return;\n  }\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    const dalayInFunc = Number(delay.value) + (i - 1) * Number(step.value);\n    setTimeout(() => {\n      createPromise(i, dalayInFunc)\n      .then(({ position, delay }) => {\n        onResolve(position, delay);\n      })\n      .catch(({ position, delay }) => {\n        onReject(position, delay);\n      });\n    }, dalayInFunc);\n  };\n\n  event.currentTarget.reset()\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    };\n  });\n}\n\nfunction onResolve(position, delay) {\n  return Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onReject(position, delay) {\n  return Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","dalayInFunc","Number","delay1","value","i","step","setTimeout","position","delay","shouldResolve","Math","random","Promise","resolve","reject","then","param","Notify","success","concat","$ce04d3a99e08e73b$var$onResolve","catch","failure","$ce04d3a99e08e73b$var$onReject","event","preventDefault","_elements","currentTarget","elements","amount","info","i1","_loop","reset"],"version":3,"file":"03-promises.a589fea1.js.map"}