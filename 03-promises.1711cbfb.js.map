{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,UAAEN,QAAUC,IAEpBM,EAAO,UAAEP,QAAUC,OAKzB,SAASO,EAAUR,EAAUC,GAC3B,OAAOJ,EAAAY,OAAOC,QAAQ,uBAAqBV,QAAiBC,OAG9D,SAASU,EAASX,EAAUC,GAC1B,OAAOJ,EAAAY,OAAOG,QAAQ,sBAAoBZ,QAAeC,OA9CxCY,SAASC,cAAc,SAE/BC,iBAAiB,UAE5B,WACEC,MAAMC,iBAEN,MAAOC,UAAWjB,MAAAkB,EAAKC,KAAEA,EAAIC,OAAEA,IAAWL,MAAMM,cAEhD,GAAIH,EAAMI,MAAQ,GAAKH,EAAKG,MAAQ,EAElC,YADA1B,EAAAY,OAAOe,KAAK,qEAId,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAOE,MAAOE,GAAK,EAAG,CACzC,MAAMC,EAAcC,OAAOR,EAAMI,QAAUE,EAAI,GAAKE,OAAOP,EAAKG,OAChEK,YAAW,KACT7B,EAAc0B,EAAGC,GAChBG,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjBO,EAAUR,EAAUC,MAErB6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBU,EAASX,EAAUC,QAEpByB,GAGLV,MAAMM,cAAcS","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst submitForm = document.querySelector('.form');\n\nsubmitForm.addEventListener('submit', onBtnClickHandler);\n\nfunction onBtnClickHandler() {\n  event.preventDefault();\n\n  const {elements: {delay, step, amount}} = event.currentTarget;\n\n  if (delay.value < 0 || step.value < 0) {\n    Notify.info('First delay and Delay step cannot be less zero! Please change it!');\n    return;\n  }\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    const dalayInFunc = Number(delay.value) + (i - 1) * Number(step.value);\n    setTimeout(() => {\n      createPromise(i, dalayInFunc)\n      .then(({ position, delay }) => {\n        onResolve(position, delay);\n      })\n      .catch(({ position, delay }) => {\n        onReject(position, delay);\n      });\n    }, dalayInFunc);\n  };\n\n  event.currentTarget.reset()\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    };\n  });\n}\n\nfunction onResolve(position, delay) {\n  return Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onReject(position, delay) {\n  return Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$onResolve","Notify","success","$47d4ff9957288465$var$onReject","failure","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","value","info","i","dalayInFunc","Number","setTimeout","then","catch","reset"],"version":3,"file":"03-promises.1711cbfb.js.map"}